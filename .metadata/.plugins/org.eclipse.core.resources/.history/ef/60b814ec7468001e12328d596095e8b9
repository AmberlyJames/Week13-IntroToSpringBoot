package pet.store.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import lombok.extern.slf4j.Slf4j;
import pet.store.controller.model.PetStoreData;
import pet.store.controller.model.PetStoreEmployee;
import pet.store.service.PetStoreService;

@RestController							//Tells Spring that this class is a REST controller
@RequestMapping("/pet_store")			//Tells Spring the URI must start with slash pet_store
@Slf4j									//lombok annotation that creates logger
public class PetStoreController {
	@Autowired
	private PetStoreService petStoreService;
	
	@PostMapping("/pet_store")
	@ResponseStatus(code = HttpStatus.CREATED)
	public PetStoreData insertPetStore(@RequestBody PetStoreData petStoreData) {
		log.info("Creating pet_store {}", petStoreData);
		return petStoreService.savePetStore(petStoreData);
	}
	@PutMapping("/pet_store/{petStoreId}")
	public PetStoreData updatePetStore(@PathVariable Long petStoreId, @RequestBody PetStoreData petStoreData) {
		petStoreData.setPetStoreId(petStoreId);
		log.info("Updating pet store {}", petStoreData);
		return petStoreService.savePetStore(petStoreData);
	}
	@PostMapping("/{petStoreId}/employee")
	@ResponseStatus(code = HttpStatus.CREATED)
	public PetStoreEmployee addEmployeeToPetStore(@PathVariable Long petStoreId,@RequestBody PetStoreEmployee employee) {
		log.info("Creating employee {} for pet store with ID = {}", petStoreId, employee);
		return petStoreService.saveEmployee(petStoreId, employee);
	}
	@PutMapping("/employee/{employeeId}")
	public PetStoreEmployee updateEmployee(@PathVariable Long employeeId, @RequestBody PetStoreEmployee employee) {
		employee.setEmployeeId(employeeId);
		log.info("Updating employee {}", employee);
		return petStoreService.saveEmployee(employeeId, employee);
		
	}
}
